version: 2.1

orbs:
  android: circleci/android@3.1.0
  gradle: circleci/gradle@3.0.0

executors:
  android-docker:
    docker:
      - image: cimg/android:2025.04 # Use the latest stable tag from the official page
  ios-executor:
    macos:
      xcode: "15.2.0"
      resource_class: m2pro.large

jobs:
  shared_build:
    executor: ios-executor
    steps:
      - checkout
      # Cache Homebrew packages
      - restore_cache:
          keys:
            - v1-homebrew-{{ .Branch }}-{{ checksum "build.gradle.kts" }}
            - v1-homebrew-{{ .Branch }}-
            - v1-homebrew-
      - run:
          name: Install Android SDK Manager
          environment:
            HOMEBREW_NO_AUTO_UPDATE: 1
          command: |
            brew install --cask android-commandlinetools || true
      - save_cache:
          paths:
            - /usr/local/Homebrew
            - ~/Library/Caches/Homebrew
          key: v1-homebrew-{{ .Branch }}-{{ checksum "build.gradle.kts" }}
      - run:
          name: Setup Android SDK
          command: |
            echo 'export ANDROID_HOME=$HOME/Library/Android/sdk' >> $BASH_ENV
            echo 'export ANDROID_SDK_ROOT=$HOME/Library/Android/sdk' >> $BASH_ENV
            echo 'export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools' >> $BASH_ENV
            source $BASH_ENV
            mkdir -p "$ANDROID_HOME/cmdline-tools"
            sdkmanager --list || true
      - android/accept_licenses
      - android/install_ndk:
          version: "28.1.13356709"
      - android/restore_gradle_cache:
          cache_prefix: v5-shared
      - run:
          name: Build shared module for all platforms
          command: |
            ./gradlew :shared:build :shared:test
      - android/save_gradle_cache:
          cache_prefix: v5-shared
      - store_artifacts:
          path: shared/build/reports
          destination: shared-module-reports
      - store_test_results:
          path: shared/build/test-results
      - persist_to_workspace:
          root: .
          paths:
            - shared/build
            - shared/src
            - .gradle

  android_build_and_test:
    executor: android-docker
    steps:
      - checkout
      - attach_workspace:
          at: .
      - android/restore_build_cache
      - android/restore_gradle_cache:
          cache_prefix: v5-android
      - run:
          name: Build and test Android app
          command: ./gradlew androidApp:assembleDebug androidApp:testDebugUnitTest
      - android/save_build_cache
      - android/save_gradle_cache:
          cache_prefix: v5-android
      - store_artifacts:
          path: androidApp/build/reports/tests
          destination: android-test-reports
      - store_artifacts:
          path: androidApp/build/outputs/apk
          destination: android-apk
      - store_test_results:
          path: androidApp/build/test-results

  ios_build_and_test:
    executor: ios-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install dependencies
          command: |
            brew install cocoapods || true
            pod install --project-directory=iosApp/iosApp || true
      - run:
          name: Build iOS app
          command: |
            xcodebuild -workspace iosApp/iosApp.xcodeproj/project.xcworkspace \
              -scheme iosApp \
              -sdk iphonesimulator \
              -configuration Debug \
              build
      - run:
          name: Run iOS tests
          command: |
            xcodebuild test -workspace iosApp/iosApp.xcodeproj/project.xcworkspace \
              -scheme iosApp \
              -sdk iphonesimulator \
              -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.2' \
              -destination-timeout 60 \
              IPHONEOS_DEPLOYMENT_TARGET=14.0
      - store_artifacts:
          path: iosApp/iosApp/build
          destination: ios-outputs

  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: Dummy deploy
          command: echo "Deploy step (replace with real deployment)"

workflows:
  version: 2
  build_and_test:
    jobs:
      - shared_build
      - android_build_and_test:
          requires:
            - shared_build
      - ios_build_and_test:
          requires:
            - shared_build
      - deploy:
          requires:
            - android_build_and_test
            - ios_build_and_test 